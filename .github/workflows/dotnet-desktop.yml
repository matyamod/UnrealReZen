name: build and test

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x' # The .NET SDK version to use
  TUW_VERSION: '0.9.0'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.check-tag.outputs.tag }}

    steps:
      - name: Check tag
        id: check-tag
        run: |
          if [[ ${{ github.ref }} == refs/tags/v* ]]; then
            TAG=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          else
            TAG=$(echo ${{ github.sha }} | cut -c1-7)
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
        shell: bash

      - uses: actions/checkout@v4

      - name: Create Release Draft
        id: create-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.check-tag.outputs.tag }}
          name: ${{ steps.check-tag.outputs.tag }}
          body: |
            ## Changelog

            - First Change
            - Second Change
          draft: true
          prerelease: false

  build-and-test:

    name: release-${{matrix.os}}
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet publish -r win-x64 -p:PublishSingleFile=true --self-contained false

      - name: Download tuw
        run: |
          curl -OL https://github.com/matyalatte/tuw/releases/download/v${{ env.TUW_VERSION }}/Tuw-v${{ env.TUW_VERSION }}-Windows10-x64.zip
          powershell Expand-Archive -Force -Path Tuw-v${{ env.TUW_VERSION }}-Windows10-x64.zip

      - name: Copy files
        run: |
          mv UnrealReZen/bin/Release/net8.0/win-x64/publish .
          cp gui_definition.json publish
          cp Tuw-v${{ env.TUW_VERSION }}-Windows10-x64/Tuw.exe publish/GUI.exe
        shell: bash

      - name: Archive release for Windows
        run: |
          cd publish
          powershell Compress-Archive -Force -Path * -Destination ../UnrealReZen_ff7r2_${{ needs.setup.outputs.tag }}.zip

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.setup.outputs.tag }} UnrealReZen_ff7r2_${{ needs.setup.outputs.tag }}.zip
